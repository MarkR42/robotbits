gpio pins:

PB0 - MOTOR_PWM_1
PB1 - MOTOR_PWM_2
PB2 - PWMIN
    - Pulses in, 1ms to 2ms.
PB3 - ~FAULT
    - Active low. We should enable pull-up so that we can read it.
PB4 - Led (active high)
    - Can also use for diag
PB5 - reset (NC)

TIMER USAGE

We can use the hardware PWM generator from the timer
to pulse PB0 or PB1.

Then in the main loop, we can just loop checking PWMIN and timer


Timer is only 8-bit so need to set the divider to a reasonable time,
then as it overflows, we increment a global variable to store the time
since startup.

The time since startup is important as we need to remember when the
last pulse was, too long between pulses = failsafe, turn off motor.

We also need to measure the pulse width accurately.

 
----

Main clock: 4.8mhz (nominal) internal osc
    with divide-by-2

Timer clock: 
Prescaler = 4.8 / 64 = 13.3 microseconds period per clock
Period of  overflow = 256 ticks = ~ 3.4 milliseconds.
    - This is longer than a servo pulse (which can be 2500 us)
    - We still need to count the number of overflows.
    
PWM Frequency = ~293 hz - clearly audible

Which PWM mode to use?
"Fast PWM" - simplest mode,
Compare mode: 1 1 = "Set OC0A on Compare Match, clear OC0A at TOP"
    - So to program the pwm duty cycle, we write the opposite value,
    e.g. for maximum duty, write 0, for 75% duty we write 0x40
    
    
    
