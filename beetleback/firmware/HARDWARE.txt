gpio pins:

PB0 - MOTOR_PWM_1
PB1 - MOTOR_PWM_2
PB2 - PWMIN
PB3 - ~FAULT
PB4 - Led (active high)
PB5 - reset (NC)

TIMER USAGE

We can use the hardware PWM generator from the timer
to pulse PB0 or PB1.

Then in the main loop, we can just loop checking PWMIN and timer


Timer is only 8-bit so need to set the divider to a reasonable time,
then as it overflows, we increment a global variable to store the time
since startup.

The time since startup is important as we need to remember when the
last pulse was, too long between pulses = failsafe, turn off motor.

We also need to measure the pulse width accurately.

 
----

Main clock: 9.6mhz (nominal) internal osc

Timer clock: 
Prescaler = 9.6 / 64 = 6.66 microseconds period per clock
Period of  overflow = 256 ticks = ~ 1706 microseconds.
    - This is shorter than a servo pulse (which can be 2500 us)
    - But we can count the number of overflows.
    
PWM Frequency = ~580 hz - clearly audible

Which PWM mode to use?
"Fast PWM" - simplest mode,
Compare mode: 1 1 = "Set OC0A on Compare Match, clear OC0A at TOP"
    - So to program the pwm duty cycle, we write the opposite value,
    e.g. for maximum duty, write 0, for 75% duty we write 0x40
    
    
    
